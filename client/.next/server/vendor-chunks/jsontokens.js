"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jsontokens";
exports.ids = ["vendor-chunks/jsontokens"];
exports.modules = {

/***/ "(ssr)/./node_modules/jsontokens/lib/base64Url.js":
/*!**************************************************!*\
  !*** ./node_modules/jsontokens/lib/base64Url.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decode = exports.encode = exports.unescape = exports.escape = exports.pad = void 0;\nconst base64_js_1 = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\nfunction pad(base64) {\n    return `${base64}${'='.repeat(4 - (base64.length % 4 || 4))}`;\n}\nexports.pad = pad;\nfunction escape(base64) {\n    return base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nexports.escape = escape;\nfunction unescape(base64Url) {\n    return pad(base64Url).replace(/-/g, '+').replace(/_/g, '/');\n}\nexports.unescape = unescape;\nfunction encode(base64) {\n    return escape((0, base64_js_1.fromByteArray)(new TextEncoder().encode(base64)));\n}\nexports.encode = encode;\nfunction decode(base64Url) {\n    return new TextDecoder().decode((0, base64_js_1.toByteArray)(pad(unescape(base64Url))));\n}\nexports.decode = decode;\n//# sourceMappingURL=base64Url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvYmFzZTY0VXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsY0FBYyxHQUFHLFdBQVc7QUFDakYsb0JBQW9CLG1CQUFPLENBQUMsMERBQVc7QUFDdkM7QUFDQSxjQUFjLE9BQU8sRUFBRSx5Q0FBeUM7QUFDaEU7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVtcGxhdGUtcmVhY3QtbmV4dGpzLXRzLy4vbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL2Jhc2U2NFVybC5qcz9lM2IzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLmVuY29kZSA9IGV4cG9ydHMudW5lc2NhcGUgPSBleHBvcnRzLmVzY2FwZSA9IGV4cG9ydHMucGFkID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0X2pzXzEgPSByZXF1aXJlKFwiYmFzZTY0LWpzXCIpO1xuZnVuY3Rpb24gcGFkKGJhc2U2NCkge1xuICAgIHJldHVybiBgJHtiYXNlNjR9JHsnPScucmVwZWF0KDQgLSAoYmFzZTY0Lmxlbmd0aCAlIDQgfHwgNCkpfWA7XG59XG5leHBvcnRzLnBhZCA9IHBhZDtcbmZ1bmN0aW9uIGVzY2FwZShiYXNlNjQpIHtcbiAgICByZXR1cm4gYmFzZTY0LnJlcGxhY2UoLz0vZywgJycpLnJlcGxhY2UoL1xcKy9nLCAnLScpLnJlcGxhY2UoL1xcLy9nLCAnXycpO1xufVxuZXhwb3J0cy5lc2NhcGUgPSBlc2NhcGU7XG5mdW5jdGlvbiB1bmVzY2FwZShiYXNlNjRVcmwpIHtcbiAgICByZXR1cm4gcGFkKGJhc2U2NFVybCkucmVwbGFjZSgvLS9nLCAnKycpLnJlcGxhY2UoL18vZywgJy8nKTtcbn1cbmV4cG9ydHMudW5lc2NhcGUgPSB1bmVzY2FwZTtcbmZ1bmN0aW9uIGVuY29kZShiYXNlNjQpIHtcbiAgICByZXR1cm4gZXNjYXBlKCgwLCBiYXNlNjRfanNfMS5mcm9tQnl0ZUFycmF5KShuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoYmFzZTY0KSkpO1xufVxuZXhwb3J0cy5lbmNvZGUgPSBlbmNvZGU7XG5mdW5jdGlvbiBkZWNvZGUoYmFzZTY0VXJsKSB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZSgoMCwgYmFzZTY0X2pzXzEudG9CeXRlQXJyYXkpKHBhZCh1bmVzY2FwZShiYXNlNjRVcmwpKSkpO1xufVxuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNjRVcmwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/base64Url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js":
/*!************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cryptoClients = exports.SECP256K1Client = void 0;\nconst secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js\");\nObject.defineProperty(exports, \"SECP256K1Client\", ({ enumerable: true, get: function () { return secp256k1_1.SECP256K1Client; } }));\nconst cryptoClients = {\n    ES256K: secp256k1_1.SECP256K1Client,\n};\nexports.cryptoClients = cryptoClients;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyx1QkFBdUI7QUFDL0Msb0JBQW9CLG1CQUFPLENBQUMsbUZBQWE7QUFDekMsbURBQWtELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ2pJO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbXBsYXRlLXJlYWN0LW5leHRqcy10cy8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9jcnlwdG9DbGllbnRzL2luZGV4LmpzPzE3YmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyeXB0b0NsaWVudHMgPSBleHBvcnRzLlNFQ1AyNTZLMUNsaWVudCA9IHZvaWQgMDtcbmNvbnN0IHNlY3AyNTZrMV8xID0gcmVxdWlyZShcIi4vc2VjcDI1NmsxXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU0VDUDI1NksxQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZWNwMjU2azFfMS5TRUNQMjU2SzFDbGllbnQ7IH0gfSk7XG5jb25zdCBjcnlwdG9DbGllbnRzID0ge1xuICAgIEVTMjU2Szogc2VjcDI1NmsxXzEuU0VDUDI1NksxQ2xpZW50LFxufTtcbmV4cG9ydHMuY3J5cHRvQ2xpZW50cyA9IGNyeXB0b0NsaWVudHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js":
/*!****************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/secp256k1.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SECP256K1Client = void 0;\nconst hmac_1 = __webpack_require__(/*! @noble/hashes/hmac */ \"(ssr)/./node_modules/@noble/hashes/hmac.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst secp = __webpack_require__(/*! @noble/secp256k1 */ \"(ssr)/./node_modules/@noble/secp256k1/lib/index.js\");\nconst ecdsaSigFormatter_1 = __webpack_require__(/*! ../ecdsaSigFormatter */ \"(ssr)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/@noble/hashes/utils.js\");\n// required to use noble secp https://github.com/paulmillr/noble-secp256k1\nsecp.utils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac_1.hmac.create(sha256_1.sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nclass SECP256K1Client {\n    static derivePublicKey(privateKey, compressed = true) {\n        if (privateKey.length === 66) {\n            privateKey = privateKey.slice(0, 64);\n        }\n        if (privateKey.length < 64) {\n            // backward compatibly accept too short private keys\n            privateKey = privateKey.padStart(64, '0');\n        }\n        return (0, utils_1.bytesToHex)(secp.getPublicKey(privateKey, compressed));\n    }\n    static signHash(signingInputHash, privateKey, format = 'jose') {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !privateKey) {\n            throw new errors_1.MissingParametersError('a signing input hash and private key are all required');\n        }\n        const derSignature = secp.signSync(signingInputHash, privateKey.slice(0, 64), {\n            der: true,\n            canonical: false,\n        });\n        if (format === 'der')\n            return (0, utils_1.bytesToHex)(derSignature);\n        if (format === 'jose')\n            return (0, ecdsaSigFormatter_1.derToJose)(derSignature, 'ES256');\n        throw Error('Invalid signature format');\n    }\n    static loadSignature(joseSignature) {\n        // create and return the DER-formatted signature bytes\n        return (0, ecdsaSigFormatter_1.joseToDer)(joseSignature, 'ES256');\n    }\n    static verifyHash(signingInputHash, derSignatureBytes, publicKey) {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !derSignatureBytes || !publicKey) {\n            throw new errors_1.MissingParametersError('a signing input hash, der signature, and public key are all required');\n        }\n        return secp.verify(derSignatureBytes, signingInputHash, publicKey, { strict: false });\n    }\n}\nexports.SECP256K1Client = SECP256K1Client;\nSECP256K1Client.algorithmName = 'ES256K';\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9zZWNwMjU2azEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyxzRUFBb0I7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGFBQWEsbUJBQU8sQ0FBQyw0RUFBa0I7QUFDdkMsNEJBQTRCLG1CQUFPLENBQUMsc0ZBQXNCO0FBQzFELGlCQUFpQixtQkFBTyxDQUFDLGdFQUFXO0FBQ3BDLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsZUFBZTtBQUM1RjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW1wbGF0ZS1yZWFjdC1uZXh0anMtdHMvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9zZWNwMjU2azEuanM/MjllMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU0VDUDI1NksxQ2xpZW50ID0gdm9pZCAwO1xuY29uc3QgaG1hY18xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvaG1hY1wiKTtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3Qgc2VjcCA9IHJlcXVpcmUoXCJAbm9ibGUvc2VjcDI1NmsxXCIpO1xuY29uc3QgZWNkc2FTaWdGb3JtYXR0ZXJfMSA9IHJlcXVpcmUoXCIuLi9lY2RzYVNpZ0Zvcm1hdHRlclwiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4uL2Vycm9yc1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy91dGlsc1wiKTtcbi8vIHJlcXVpcmVkIHRvIHVzZSBub2JsZSBzZWNwIGh0dHBzOi8vZ2l0aHViLmNvbS9wYXVsbWlsbHIvbm9ibGUtc2VjcDI1NmsxXG5zZWNwLnV0aWxzLmhtYWNTaGEyNTZTeW5jID0gKGtleSwgLi4ubXNncykgPT4ge1xuICAgIGNvbnN0IGggPSBobWFjXzEuaG1hYy5jcmVhdGUoc2hhMjU2XzEuc2hhMjU2LCBrZXkpO1xuICAgIG1zZ3MuZm9yRWFjaChtc2cgPT4gaC51cGRhdGUobXNnKSk7XG4gICAgcmV0dXJuIGguZGlnZXN0KCk7XG59O1xuY2xhc3MgU0VDUDI1NksxQ2xpZW50IHtcbiAgICBzdGF0aWMgZGVyaXZlUHVibGljS2V5KHByaXZhdGVLZXksIGNvbXByZXNzZWQgPSB0cnVlKSB7XG4gICAgICAgIGlmIChwcml2YXRlS2V5Lmxlbmd0aCA9PT0gNjYpIHtcbiAgICAgICAgICAgIHByaXZhdGVLZXkgPSBwcml2YXRlS2V5LnNsaWNlKDAsIDY0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJpdmF0ZUtleS5sZW5ndGggPCA2NCkge1xuICAgICAgICAgICAgLy8gYmFja3dhcmQgY29tcGF0aWJseSBhY2NlcHQgdG9vIHNob3J0IHByaXZhdGUga2V5c1xuICAgICAgICAgICAgcHJpdmF0ZUtleSA9IHByaXZhdGVLZXkucGFkU3RhcnQoNjQsICcwJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKHNlY3AuZ2V0UHVibGljS2V5KHByaXZhdGVLZXksIGNvbXByZXNzZWQpKTtcbiAgICB9XG4gICAgc3RhdGljIHNpZ25IYXNoKHNpZ25pbmdJbnB1dEhhc2gsIHByaXZhdGVLZXksIGZvcm1hdCA9ICdqb3NlJykge1xuICAgICAgICAvLyBtYWtlIHN1cmUgdGhlIHJlcXVpcmVkIHBhcmFtZXRlcnMgYXJlIHByb3ZpZGVkXG4gICAgICAgIGlmICghc2lnbmluZ0lucHV0SGFzaCB8fCAhcHJpdmF0ZUtleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLk1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IoJ2Egc2lnbmluZyBpbnB1dCBoYXNoIGFuZCBwcml2YXRlIGtleSBhcmUgYWxsIHJlcXVpcmVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGVyU2lnbmF0dXJlID0gc2VjcC5zaWduU3luYyhzaWduaW5nSW5wdXRIYXNoLCBwcml2YXRlS2V5LnNsaWNlKDAsIDY0KSwge1xuICAgICAgICAgICAgZGVyOiB0cnVlLFxuICAgICAgICAgICAgY2Fub25pY2FsOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChmb3JtYXQgPT09ICdkZXInKVxuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKGRlclNpZ25hdHVyZSk7XG4gICAgICAgIGlmIChmb3JtYXQgPT09ICdqb3NlJylcbiAgICAgICAgICAgIHJldHVybiAoMCwgZWNkc2FTaWdGb3JtYXR0ZXJfMS5kZXJUb0pvc2UpKGRlclNpZ25hdHVyZSwgJ0VTMjU2Jyk7XG4gICAgICAgIHRocm93IEVycm9yKCdJbnZhbGlkIHNpZ25hdHVyZSBmb3JtYXQnKTtcbiAgICB9XG4gICAgc3RhdGljIGxvYWRTaWduYXR1cmUoam9zZVNpZ25hdHVyZSkge1xuICAgICAgICAvLyBjcmVhdGUgYW5kIHJldHVybiB0aGUgREVSLWZvcm1hdHRlZCBzaWduYXR1cmUgYnl0ZXNcbiAgICAgICAgcmV0dXJuICgwLCBlY2RzYVNpZ0Zvcm1hdHRlcl8xLmpvc2VUb0Rlcikoam9zZVNpZ25hdHVyZSwgJ0VTMjU2Jyk7XG4gICAgfVxuICAgIHN0YXRpYyB2ZXJpZnlIYXNoKHNpZ25pbmdJbnB1dEhhc2gsIGRlclNpZ25hdHVyZUJ5dGVzLCBwdWJsaWNLZXkpIHtcbiAgICAgICAgLy8gbWFrZSBzdXJlIHRoZSByZXF1aXJlZCBwYXJhbWV0ZXJzIGFyZSBwcm92aWRlZFxuICAgICAgICBpZiAoIXNpZ25pbmdJbnB1dEhhc2ggfHwgIWRlclNpZ25hdHVyZUJ5dGVzIHx8ICFwdWJsaWNLZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5NaXNzaW5nUGFyYW1ldGVyc0Vycm9yKCdhIHNpZ25pbmcgaW5wdXQgaGFzaCwgZGVyIHNpZ25hdHVyZSwgYW5kIHB1YmxpYyBrZXkgYXJlIGFsbCByZXF1aXJlZCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZWNwLnZlcmlmeShkZXJTaWduYXR1cmVCeXRlcywgc2lnbmluZ0lucHV0SGFzaCwgcHVibGljS2V5LCB7IHN0cmljdDogZmFsc2UgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TRUNQMjU2SzFDbGllbnQgPSBTRUNQMjU2SzFDbGllbnQ7XG5TRUNQMjU2SzFDbGllbnQuYWxnb3JpdGhtTmFtZSA9ICdFUzI1NksnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VjcDI1NmsxLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js":
/*!*************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/sha256.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashSha256Async = exports.hashSha256 = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nfunction hashSha256(input) {\n    return (0, sha256_1.sha256)(input);\n}\nexports.hashSha256 = hashSha256;\nfunction hashSha256Async(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n            if (isSubtleCryptoAvailable) {\n                // Use the W3C Web Crypto API if available (running in a web browser).\n                const bytes = typeof input === 'string' ? new TextEncoder().encode(input) : input;\n                const hash = yield crypto.subtle.digest('SHA-256', bytes);\n                return new Uint8Array(hash);\n            }\n            else {\n                // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n                const nodeCrypto = __webpack_require__(/*! crypto */ \"crypto\");\n                if (!nodeCrypto.createHash) {\n                    throw new Error('`crypto` module does not contain `createHash`');\n                }\n                return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n            }\n        }\n        catch (error) {\n            console.log(error);\n            console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' +\n                'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' +\n                'Falling back to JS implementation.');\n            return Promise.resolve(hashSha256(input));\n        }\n    });\n}\nexports.hashSha256Async = hashSha256Async;\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9zaGEyNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGtCQUFrQjtBQUM1QyxpQkFBaUIsbUJBQU8sQ0FBQywwRUFBc0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVtcGxhdGUtcmVhY3QtbmV4dGpzLXRzLy4vbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL2NyeXB0b0NsaWVudHMvc2hhMjU2LmpzPzg3MTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFzaFNoYTI1NkFzeW5jID0gZXhwb3J0cy5oYXNoU2hhMjU2ID0gdm9pZCAwO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIik7XG5mdW5jdGlvbiBoYXNoU2hhMjU2KGlucHV0KSB7XG4gICAgcmV0dXJuICgwLCBzaGEyNTZfMS5zaGEyNTYpKGlucHV0KTtcbn1cbmV4cG9ydHMuaGFzaFNoYTI1NiA9IGhhc2hTaGEyNTY7XG5mdW5jdGlvbiBoYXNoU2hhMjU2QXN5bmMoaW5wdXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgaXNTdWJ0bGVDcnlwdG9BdmFpbGFibGUgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY3J5cHRvLnN1YnRsZSAhPT0gJ3VuZGVmaW5lZCc7XG4gICAgICAgICAgICBpZiAoaXNTdWJ0bGVDcnlwdG9BdmFpbGFibGUpIHtcbiAgICAgICAgICAgICAgICAvLyBVc2UgdGhlIFczQyBXZWIgQ3J5cHRvIEFQSSBpZiBhdmFpbGFibGUgKHJ1bm5pbmcgaW4gYSB3ZWIgYnJvd3NlcikuXG4gICAgICAgICAgICAgICAgY29uc3QgYnl0ZXMgPSB0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnID8gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGlucHV0KSA6IGlucHV0O1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhc2ggPSB5aWVsZCBjcnlwdG8uc3VidGxlLmRpZ2VzdCgnU0hBLTI1NicsIGJ5dGVzKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoaGFzaCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBPdGhlcndpc2UgdHJ5IGxvYWRpbmcgdGhlIE5vZGUuanMgYGNyeXB0b2AgbW9kdWxlIChydW5uaW5nIGluIE5vZGUuanMsIG9yIGFuIG9sZGVyIGJyb3dzZXIgd2l0aCBhIHBvbHlmaWxsKS5cbiAgICAgICAgICAgICAgICBjb25zdCBub2RlQ3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG4gICAgICAgICAgICAgICAgaWYgKCFub2RlQ3J5cHRvLmNyZWF0ZUhhc2gpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdgY3J5cHRvYCBtb2R1bGUgZG9lcyBub3QgY29udGFpbiBgY3JlYXRlSGFzaGAnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShub2RlQ3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0NyeXB0byBsaWIgbm90IGZvdW5kLiBOZWl0aGVyIHRoZSBnbG9iYWwgYGNyeXB0by5zdWJ0bGVgIFdlYiBDcnlwdG8gQVBJLCAnICtcbiAgICAgICAgICAgICAgICAnbm9yIHRoZSBvciB0aGUgTm9kZS5qcyBgcmVxdWlyZShcImNyeXB0b1wiKS5jcmVhdGVIYXNoYCBtb2R1bGUgaXMgYXZhaWxhYmxlLiAnICtcbiAgICAgICAgICAgICAgICAnRmFsbGluZyBiYWNrIHRvIEpTIGltcGxlbWVudGF0aW9uLicpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShoYXNoU2hhMjU2KGlucHV0KSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuaGFzaFNoYTI1NkFzeW5jID0gaGFzaFNoYTI1NkFzeW5jO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMjU2LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/decode.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/decode.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeToken = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nfunction decodeToken(token) {\n    if (typeof token === 'string') {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        const header = JSON.parse(base64url.decode(tokenParts[0]));\n        const payload = JSON.parse(base64url.decode(tokenParts[1]));\n        const signature = tokenParts[2];\n        // return the token object\n        return {\n            header: header,\n            payload: payload,\n            signature: signature,\n        };\n    }\n    else if (typeof token === 'object') {\n        if (typeof token.payload !== 'string') {\n            throw new Error('Expected token payload to be a base64 or json string');\n        }\n        let payload = token.payload;\n        if (token.payload[0] !== '{') {\n            payload = base64url.decode(payload);\n        }\n        const allHeaders = [];\n        token.header.map((headerValue) => {\n            const header = JSON.parse(base64url.decode(headerValue));\n            allHeaders.push(header);\n        });\n        return {\n            header: allHeaders,\n            payload: JSON.parse(payload),\n            signature: token.signature,\n        };\n    }\n}\nexports.decodeToken = decodeToken;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZGVjb2RlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixrQkFBa0IsbUJBQU8sQ0FBQyxxRUFBYTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW1wbGF0ZS1yZWFjdC1uZXh0anMtdHMvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZGVjb2RlLmpzP2FiOTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZVRva2VuID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZShcIi4vYmFzZTY0VXJsXCIpO1xuZnVuY3Rpb24gZGVjb2RlVG9rZW4odG9rZW4pIHtcbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICAvLyBkZWNvbXBvc2UgdGhlIHRva2VuIGludG8gcGFydHNcbiAgICAgICAgY29uc3QgdG9rZW5QYXJ0cyA9IHRva2VuLnNwbGl0KCcuJyk7XG4gICAgICAgIGNvbnN0IGhlYWRlciA9IEpTT04ucGFyc2UoYmFzZTY0dXJsLmRlY29kZSh0b2tlblBhcnRzWzBdKSk7XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSBKU09OLnBhcnNlKGJhc2U2NHVybC5kZWNvZGUodG9rZW5QYXJ0c1sxXSkpO1xuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSB0b2tlblBhcnRzWzJdO1xuICAgICAgICAvLyByZXR1cm4gdGhlIHRva2VuIG9iamVjdFxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaGVhZGVyOiBoZWFkZXIsXG4gICAgICAgICAgICBwYXlsb2FkOiBwYXlsb2FkLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWduYXR1cmUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0b2tlbi5wYXlsb2FkICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0b2tlbiBwYXlsb2FkIHRvIGJlIGEgYmFzZTY0IG9yIGpzb24gc3RyaW5nJyk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHBheWxvYWQgPSB0b2tlbi5wYXlsb2FkO1xuICAgICAgICBpZiAodG9rZW4ucGF5bG9hZFswXSAhPT0gJ3snKSB7XG4gICAgICAgICAgICBwYXlsb2FkID0gYmFzZTY0dXJsLmRlY29kZShwYXlsb2FkKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhbGxIZWFkZXJzID0gW107XG4gICAgICAgIHRva2VuLmhlYWRlci5tYXAoKGhlYWRlclZhbHVlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBoZWFkZXIgPSBKU09OLnBhcnNlKGJhc2U2NHVybC5kZWNvZGUoaGVhZGVyVmFsdWUpKTtcbiAgICAgICAgICAgIGFsbEhlYWRlcnMucHVzaChoZWFkZXIpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGhlYWRlcjogYWxsSGVhZGVycyxcbiAgICAgICAgICAgIHBheWxvYWQ6IEpTT04ucGFyc2UocGF5bG9hZCksXG4gICAgICAgICAgICBzaWduYXR1cmU6IHRva2VuLnNpZ25hdHVyZSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLmRlY29kZVRva2VuID0gZGVjb2RlVG9rZW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js":
/*!**********************************************************!*\
  !*** ./node_modules/jsontokens/lib/ecdsaSigFormatter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n//  NOTICE\n//  Copyright 2015 D2L Corporation\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.joseToDer = exports.derToJose = void 0;\n// The following code is adapted from https://github.com/Brightspace/node-ecdsa-sig-formatter\nconst base64_js_1 = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\nconst base64Url_1 = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nfunction getParamSize(keySize) {\n    return ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n}\nconst paramBytesForAlg = {\n    ES256: getParamSize(256),\n    ES384: getParamSize(384),\n    ES512: getParamSize(521),\n};\nfunction getParamBytesForAlg(alg) {\n    const paramBytes = paramBytesForAlg[alg];\n    if (paramBytes) {\n        return paramBytes;\n    }\n    throw new Error(`Unknown algorithm \"${alg}\"`);\n}\nconst MAX_OCTET = 0x80;\nconst CLASS_UNIVERSAL = 0;\nconst PRIMITIVE_BIT = 0x20;\nconst TAG_SEQ = 0x10;\nconst TAG_INT = 0x02;\nconst ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | (CLASS_UNIVERSAL << 6);\nconst ENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\nfunction signatureAsBytes(signature) {\n    if (signature instanceof Uint8Array) {\n        return signature;\n    }\n    else if ('string' === typeof signature) {\n        return (0, base64_js_1.toByteArray)((0, base64Url_1.pad)(signature));\n    }\n    throw new TypeError('ECDSA signature must be a Base64 string or a Uint8Array');\n}\nfunction derToJose(signature, alg) {\n    const signatureBytes = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    // the DER encoded param should at most be the param size, plus a padding\n    // zero, since due to being a signed integer\n    const maxEncodedParamLength = paramBytes + 1;\n    const inputLength = signatureBytes.length;\n    let offset = 0;\n    if (signatureBytes[offset++] !== ENCODED_TAG_SEQ) {\n        throw new Error('Could not find expected \"seq\"');\n    }\n    let seqLength = signatureBytes[offset++];\n    if (seqLength === (MAX_OCTET | 1)) {\n        seqLength = signatureBytes[offset++];\n    }\n    if (inputLength - offset < seqLength) {\n        throw new Error(`\"seq\" specified length of \"${seqLength}\", only \"${inputLength - offset}\" remaining`);\n    }\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"r\"');\n    }\n    const rLength = signatureBytes[offset++];\n    if (inputLength - offset - 2 < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", only \"${inputLength - offset - 2}\" available`);\n    }\n    if (maxEncodedParamLength < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const rOffset = offset;\n    offset += rLength;\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"s\"');\n    }\n    const sLength = signatureBytes[offset++];\n    if (inputLength - offset !== sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", expected \"${inputLength - offset}\"`);\n    }\n    if (maxEncodedParamLength < sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const sOffset = offset;\n    offset += sLength;\n    if (offset !== inputLength) {\n        throw new Error(`Expected to consume entire array, but \"${inputLength - offset}\" bytes remain`);\n    }\n    const rPadding = paramBytes - rLength;\n    const sPadding = paramBytes - sLength;\n    const dst = new Uint8Array(rPadding + rLength + sPadding + sLength);\n    for (offset = 0; offset < rPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(rOffset + Math.max(-rPadding, 0), rOffset + rLength), offset);\n    offset = paramBytes;\n    for (const o = offset; offset < o + sPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(sOffset + Math.max(-sPadding, 0), sOffset + sLength), offset);\n    return (0, base64Url_1.escape)((0, base64_js_1.fromByteArray)(dst));\n}\nexports.derToJose = derToJose;\nfunction countPadding(buf, start, stop) {\n    let padding = 0;\n    while (start + padding < stop && buf[start + padding] === 0) {\n        ++padding;\n    }\n    const needsSign = buf[start + padding] >= MAX_OCTET;\n    if (needsSign) {\n        --padding;\n    }\n    return padding;\n}\nfunction joseToDer(signature, alg) {\n    signature = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    const signatureBytes = signature.length;\n    if (signatureBytes !== paramBytes * 2) {\n        throw new TypeError(`\"${alg}\" signatures must be \"${paramBytes * 2}\" bytes, saw \"${signatureBytes}\"`);\n    }\n    const rPadding = countPadding(signature, 0, paramBytes);\n    const sPadding = countPadding(signature, paramBytes, signature.length);\n    const rLength = paramBytes - rPadding;\n    const sLength = paramBytes - sPadding;\n    const rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n    const shortLength = rsBytes < MAX_OCTET;\n    const dst = new Uint8Array((shortLength ? 2 : 3) + rsBytes);\n    let offset = 0;\n    dst[offset++] = ENCODED_TAG_SEQ;\n    if (shortLength) {\n        // Bit 8 has value \"0\"\n        // bits 7-1 give the length.\n        dst[offset++] = rsBytes;\n    }\n    else {\n        // Bit 8 of first octet has value \"1\"\n        // bits 7-1 give the number of additional length octets.\n        dst[offset++] = MAX_OCTET | 1;\n        // length, base 256\n        dst[offset++] = rsBytes & 0xff;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = rLength;\n    if (rPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(0, paramBytes), offset);\n        offset += paramBytes;\n    }\n    else {\n        dst.set(signature.subarray(rPadding, paramBytes), offset);\n        offset += paramBytes - rPadding;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = sLength;\n    if (sPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(paramBytes), offset);\n    }\n    else {\n        dst.set(signature.subarray(paramBytes + sPadding), offset);\n    }\n    return dst;\n}\nexports.joseToDer = joseToDer;\n//# sourceMappingURL=ecdsaSigFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZWNkc2FTaWdGb3JtYXR0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGlCQUFpQjtBQUNyQztBQUNBLG9CQUFvQixtQkFBTyxDQUFDLDBEQUFXO0FBQ3ZDLG9CQUFvQixtQkFBTyxDQUFDLHFFQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLElBQUk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELFVBQVUsV0FBVyxxQkFBcUI7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELFFBQVEsV0FBVyx5QkFBeUI7QUFDaEc7QUFDQTtBQUNBLG9EQUFvRCxRQUFRLGFBQWEsc0JBQXNCO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsUUFBUSxlQUFlLHFCQUFxQjtBQUNoRztBQUNBO0FBQ0Esb0RBQW9ELFFBQVEsYUFBYSxzQkFBc0I7QUFDL0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UscUJBQXFCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG1CQUFtQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1QkFBdUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxJQUFJLHdCQUF3QixlQUFlLGdCQUFnQixlQUFlO0FBQzFHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW1wbGF0ZS1yZWFjdC1uZXh0anMtdHMvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZWNkc2FTaWdGb3JtYXR0ZXIuanM/ZDNhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vICBOT1RJQ0Vcbi8vICBDb3B5cmlnaHQgMjAxNSBEMkwgQ29ycG9yYXRpb25cbi8vXG4vLyAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmpvc2VUb0RlciA9IGV4cG9ydHMuZGVyVG9Kb3NlID0gdm9pZCAwO1xuLy8gVGhlIGZvbGxvd2luZyBjb2RlIGlzIGFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vQnJpZ2h0c3BhY2Uvbm9kZS1lY2RzYS1zaWctZm9ybWF0dGVyXG5jb25zdCBiYXNlNjRfanNfMSA9IHJlcXVpcmUoXCJiYXNlNjQtanNcIik7XG5jb25zdCBiYXNlNjRVcmxfMSA9IHJlcXVpcmUoXCIuL2Jhc2U2NFVybFwiKTtcbmZ1bmN0aW9uIGdldFBhcmFtU2l6ZShrZXlTaXplKSB7XG4gICAgcmV0dXJuICgoa2V5U2l6ZSAvIDgpIHwgMCkgKyAoa2V5U2l6ZSAlIDggPT09IDAgPyAwIDogMSk7XG59XG5jb25zdCBwYXJhbUJ5dGVzRm9yQWxnID0ge1xuICAgIEVTMjU2OiBnZXRQYXJhbVNpemUoMjU2KSxcbiAgICBFUzM4NDogZ2V0UGFyYW1TaXplKDM4NCksXG4gICAgRVM1MTI6IGdldFBhcmFtU2l6ZSg1MjEpLFxufTtcbmZ1bmN0aW9uIGdldFBhcmFtQnl0ZXNGb3JBbGcoYWxnKSB7XG4gICAgY29uc3QgcGFyYW1CeXRlcyA9IHBhcmFtQnl0ZXNGb3JBbGdbYWxnXTtcbiAgICBpZiAocGFyYW1CeXRlcykge1xuICAgICAgICByZXR1cm4gcGFyYW1CeXRlcztcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGFsZ29yaXRobSBcIiR7YWxnfVwiYCk7XG59XG5jb25zdCBNQVhfT0NURVQgPSAweDgwO1xuY29uc3QgQ0xBU1NfVU5JVkVSU0FMID0gMDtcbmNvbnN0IFBSSU1JVElWRV9CSVQgPSAweDIwO1xuY29uc3QgVEFHX1NFUSA9IDB4MTA7XG5jb25zdCBUQUdfSU5UID0gMHgwMjtcbmNvbnN0IEVOQ09ERURfVEFHX1NFUSA9IFRBR19TRVEgfCBQUklNSVRJVkVfQklUIHwgKENMQVNTX1VOSVZFUlNBTCA8PCA2KTtcbmNvbnN0IEVOQ09ERURfVEFHX0lOVCA9IFRBR19JTlQgfCAoQ0xBU1NfVU5JVkVSU0FMIDw8IDYpO1xuZnVuY3Rpb24gc2lnbmF0dXJlQXNCeXRlcyhzaWduYXR1cmUpIHtcbiAgICBpZiAoc2lnbmF0dXJlIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4gc2lnbmF0dXJlO1xuICAgIH1cbiAgICBlbHNlIGlmICgnc3RyaW5nJyA9PT0gdHlwZW9mIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gKDAsIGJhc2U2NF9qc18xLnRvQnl0ZUFycmF5KSgoMCwgYmFzZTY0VXJsXzEucGFkKShzaWduYXR1cmUpKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRUNEU0Egc2lnbmF0dXJlIG11c3QgYmUgYSBCYXNlNjQgc3RyaW5nIG9yIGEgVWludDhBcnJheScpO1xufVxuZnVuY3Rpb24gZGVyVG9Kb3NlKHNpZ25hdHVyZSwgYWxnKSB7XG4gICAgY29uc3Qgc2lnbmF0dXJlQnl0ZXMgPSBzaWduYXR1cmVBc0J5dGVzKHNpZ25hdHVyZSk7XG4gICAgY29uc3QgcGFyYW1CeXRlcyA9IGdldFBhcmFtQnl0ZXNGb3JBbGcoYWxnKTtcbiAgICAvLyB0aGUgREVSIGVuY29kZWQgcGFyYW0gc2hvdWxkIGF0IG1vc3QgYmUgdGhlIHBhcmFtIHNpemUsIHBsdXMgYSBwYWRkaW5nXG4gICAgLy8gemVybywgc2luY2UgZHVlIHRvIGJlaW5nIGEgc2lnbmVkIGludGVnZXJcbiAgICBjb25zdCBtYXhFbmNvZGVkUGFyYW1MZW5ndGggPSBwYXJhbUJ5dGVzICsgMTtcbiAgICBjb25zdCBpbnB1dExlbmd0aCA9IHNpZ25hdHVyZUJ5dGVzLmxlbmd0aDtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBpZiAoc2lnbmF0dXJlQnl0ZXNbb2Zmc2V0KytdICE9PSBFTkNPREVEX1RBR19TRVEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgZmluZCBleHBlY3RlZCBcInNlcVwiJyk7XG4gICAgfVxuICAgIGxldCBzZXFMZW5ndGggPSBzaWduYXR1cmVCeXRlc1tvZmZzZXQrK107XG4gICAgaWYgKHNlcUxlbmd0aCA9PT0gKE1BWF9PQ1RFVCB8IDEpKSB7XG4gICAgICAgIHNlcUxlbmd0aCA9IHNpZ25hdHVyZUJ5dGVzW29mZnNldCsrXTtcbiAgICB9XG4gICAgaWYgKGlucHV0TGVuZ3RoIC0gb2Zmc2V0IDwgc2VxTGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgXCJzZXFcIiBzcGVjaWZpZWQgbGVuZ3RoIG9mIFwiJHtzZXFMZW5ndGh9XCIsIG9ubHkgXCIke2lucHV0TGVuZ3RoIC0gb2Zmc2V0fVwiIHJlbWFpbmluZ2ApO1xuICAgIH1cbiAgICBpZiAoc2lnbmF0dXJlQnl0ZXNbb2Zmc2V0KytdICE9PSBFTkNPREVEX1RBR19JTlQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgZmluZCBleHBlY3RlZCBcImludFwiIGZvciBcInJcIicpO1xuICAgIH1cbiAgICBjb25zdCByTGVuZ3RoID0gc2lnbmF0dXJlQnl0ZXNbb2Zmc2V0KytdO1xuICAgIGlmIChpbnB1dExlbmd0aCAtIG9mZnNldCAtIDIgPCByTGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgXCJyXCIgc3BlY2lmaWVkIGxlbmd0aCBvZiBcIiR7ckxlbmd0aH1cIiwgb25seSBcIiR7aW5wdXRMZW5ndGggLSBvZmZzZXQgLSAyfVwiIGF2YWlsYWJsZWApO1xuICAgIH1cbiAgICBpZiAobWF4RW5jb2RlZFBhcmFtTGVuZ3RoIDwgckxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFwiclwiIHNwZWNpZmllZCBsZW5ndGggb2YgXCIke3JMZW5ndGh9XCIsIG1heCBvZiBcIiR7bWF4RW5jb2RlZFBhcmFtTGVuZ3RofVwiIGlzIGFjY2VwdGFibGVgKTtcbiAgICB9XG4gICAgY29uc3Qgck9mZnNldCA9IG9mZnNldDtcbiAgICBvZmZzZXQgKz0gckxlbmd0aDtcbiAgICBpZiAoc2lnbmF0dXJlQnl0ZXNbb2Zmc2V0KytdICE9PSBFTkNPREVEX1RBR19JTlQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgZmluZCBleHBlY3RlZCBcImludFwiIGZvciBcInNcIicpO1xuICAgIH1cbiAgICBjb25zdCBzTGVuZ3RoID0gc2lnbmF0dXJlQnl0ZXNbb2Zmc2V0KytdO1xuICAgIGlmIChpbnB1dExlbmd0aCAtIG9mZnNldCAhPT0gc0xlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFwic1wiIHNwZWNpZmllZCBsZW5ndGggb2YgXCIke3NMZW5ndGh9XCIsIGV4cGVjdGVkIFwiJHtpbnB1dExlbmd0aCAtIG9mZnNldH1cImApO1xuICAgIH1cbiAgICBpZiAobWF4RW5jb2RlZFBhcmFtTGVuZ3RoIDwgc0xlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFwic1wiIHNwZWNpZmllZCBsZW5ndGggb2YgXCIke3NMZW5ndGh9XCIsIG1heCBvZiBcIiR7bWF4RW5jb2RlZFBhcmFtTGVuZ3RofVwiIGlzIGFjY2VwdGFibGVgKTtcbiAgICB9XG4gICAgY29uc3Qgc09mZnNldCA9IG9mZnNldDtcbiAgICBvZmZzZXQgKz0gc0xlbmd0aDtcbiAgICBpZiAob2Zmc2V0ICE9PSBpbnB1dExlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIHRvIGNvbnN1bWUgZW50aXJlIGFycmF5LCBidXQgXCIke2lucHV0TGVuZ3RoIC0gb2Zmc2V0fVwiIGJ5dGVzIHJlbWFpbmApO1xuICAgIH1cbiAgICBjb25zdCByUGFkZGluZyA9IHBhcmFtQnl0ZXMgLSByTGVuZ3RoO1xuICAgIGNvbnN0IHNQYWRkaW5nID0gcGFyYW1CeXRlcyAtIHNMZW5ndGg7XG4gICAgY29uc3QgZHN0ID0gbmV3IFVpbnQ4QXJyYXkoclBhZGRpbmcgKyByTGVuZ3RoICsgc1BhZGRpbmcgKyBzTGVuZ3RoKTtcbiAgICBmb3IgKG9mZnNldCA9IDA7IG9mZnNldCA8IHJQYWRkaW5nOyArK29mZnNldCkge1xuICAgICAgICBkc3Rbb2Zmc2V0XSA9IDA7XG4gICAgfVxuICAgIGRzdC5zZXQoc2lnbmF0dXJlQnl0ZXMuc3ViYXJyYXkock9mZnNldCArIE1hdGgubWF4KC1yUGFkZGluZywgMCksIHJPZmZzZXQgKyByTGVuZ3RoKSwgb2Zmc2V0KTtcbiAgICBvZmZzZXQgPSBwYXJhbUJ5dGVzO1xuICAgIGZvciAoY29uc3QgbyA9IG9mZnNldDsgb2Zmc2V0IDwgbyArIHNQYWRkaW5nOyArK29mZnNldCkge1xuICAgICAgICBkc3Rbb2Zmc2V0XSA9IDA7XG4gICAgfVxuICAgIGRzdC5zZXQoc2lnbmF0dXJlQnl0ZXMuc3ViYXJyYXkoc09mZnNldCArIE1hdGgubWF4KC1zUGFkZGluZywgMCksIHNPZmZzZXQgKyBzTGVuZ3RoKSwgb2Zmc2V0KTtcbiAgICByZXR1cm4gKDAsIGJhc2U2NFVybF8xLmVzY2FwZSkoKDAsIGJhc2U2NF9qc18xLmZyb21CeXRlQXJyYXkpKGRzdCkpO1xufVxuZXhwb3J0cy5kZXJUb0pvc2UgPSBkZXJUb0pvc2U7XG5mdW5jdGlvbiBjb3VudFBhZGRpbmcoYnVmLCBzdGFydCwgc3RvcCkge1xuICAgIGxldCBwYWRkaW5nID0gMDtcbiAgICB3aGlsZSAoc3RhcnQgKyBwYWRkaW5nIDwgc3RvcCAmJiBidWZbc3RhcnQgKyBwYWRkaW5nXSA9PT0gMCkge1xuICAgICAgICArK3BhZGRpbmc7XG4gICAgfVxuICAgIGNvbnN0IG5lZWRzU2lnbiA9IGJ1ZltzdGFydCArIHBhZGRpbmddID49IE1BWF9PQ1RFVDtcbiAgICBpZiAobmVlZHNTaWduKSB7XG4gICAgICAgIC0tcGFkZGluZztcbiAgICB9XG4gICAgcmV0dXJuIHBhZGRpbmc7XG59XG5mdW5jdGlvbiBqb3NlVG9EZXIoc2lnbmF0dXJlLCBhbGcpIHtcbiAgICBzaWduYXR1cmUgPSBzaWduYXR1cmVBc0J5dGVzKHNpZ25hdHVyZSk7XG4gICAgY29uc3QgcGFyYW1CeXRlcyA9IGdldFBhcmFtQnl0ZXNGb3JBbGcoYWxnKTtcbiAgICBjb25zdCBzaWduYXR1cmVCeXRlcyA9IHNpZ25hdHVyZS5sZW5ndGg7XG4gICAgaWYgKHNpZ25hdHVyZUJ5dGVzICE9PSBwYXJhbUJ5dGVzICogMikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBcIiR7YWxnfVwiIHNpZ25hdHVyZXMgbXVzdCBiZSBcIiR7cGFyYW1CeXRlcyAqIDJ9XCIgYnl0ZXMsIHNhdyBcIiR7c2lnbmF0dXJlQnl0ZXN9XCJgKTtcbiAgICB9XG4gICAgY29uc3QgclBhZGRpbmcgPSBjb3VudFBhZGRpbmcoc2lnbmF0dXJlLCAwLCBwYXJhbUJ5dGVzKTtcbiAgICBjb25zdCBzUGFkZGluZyA9IGNvdW50UGFkZGluZyhzaWduYXR1cmUsIHBhcmFtQnl0ZXMsIHNpZ25hdHVyZS5sZW5ndGgpO1xuICAgIGNvbnN0IHJMZW5ndGggPSBwYXJhbUJ5dGVzIC0gclBhZGRpbmc7XG4gICAgY29uc3Qgc0xlbmd0aCA9IHBhcmFtQnl0ZXMgLSBzUGFkZGluZztcbiAgICBjb25zdCByc0J5dGVzID0gMSArIDEgKyByTGVuZ3RoICsgMSArIDEgKyBzTGVuZ3RoO1xuICAgIGNvbnN0IHNob3J0TGVuZ3RoID0gcnNCeXRlcyA8IE1BWF9PQ1RFVDtcbiAgICBjb25zdCBkc3QgPSBuZXcgVWludDhBcnJheSgoc2hvcnRMZW5ndGggPyAyIDogMykgKyByc0J5dGVzKTtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBkc3Rbb2Zmc2V0KytdID0gRU5DT0RFRF9UQUdfU0VRO1xuICAgIGlmIChzaG9ydExlbmd0aCkge1xuICAgICAgICAvLyBCaXQgOCBoYXMgdmFsdWUgXCIwXCJcbiAgICAgICAgLy8gYml0cyA3LTEgZ2l2ZSB0aGUgbGVuZ3RoLlxuICAgICAgICBkc3Rbb2Zmc2V0KytdID0gcnNCeXRlcztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIEJpdCA4IG9mIGZpcnN0IG9jdGV0IGhhcyB2YWx1ZSBcIjFcIlxuICAgICAgICAvLyBiaXRzIDctMSBnaXZlIHRoZSBudW1iZXIgb2YgYWRkaXRpb25hbCBsZW5ndGggb2N0ZXRzLlxuICAgICAgICBkc3Rbb2Zmc2V0KytdID0gTUFYX09DVEVUIHwgMTtcbiAgICAgICAgLy8gbGVuZ3RoLCBiYXNlIDI1NlxuICAgICAgICBkc3Rbb2Zmc2V0KytdID0gcnNCeXRlcyAmIDB4ZmY7XG4gICAgfVxuICAgIGRzdFtvZmZzZXQrK10gPSBFTkNPREVEX1RBR19JTlQ7XG4gICAgZHN0W29mZnNldCsrXSA9IHJMZW5ndGg7XG4gICAgaWYgKHJQYWRkaW5nIDwgMCkge1xuICAgICAgICBkc3Rbb2Zmc2V0KytdID0gMDtcbiAgICAgICAgZHN0LnNldChzaWduYXR1cmUuc3ViYXJyYXkoMCwgcGFyYW1CeXRlcyksIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSBwYXJhbUJ5dGVzO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZHN0LnNldChzaWduYXR1cmUuc3ViYXJyYXkoclBhZGRpbmcsIHBhcmFtQnl0ZXMpLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gcGFyYW1CeXRlcyAtIHJQYWRkaW5nO1xuICAgIH1cbiAgICBkc3Rbb2Zmc2V0KytdID0gRU5DT0RFRF9UQUdfSU5UO1xuICAgIGRzdFtvZmZzZXQrK10gPSBzTGVuZ3RoO1xuICAgIGlmIChzUGFkZGluZyA8IDApIHtcbiAgICAgICAgZHN0W29mZnNldCsrXSA9IDA7XG4gICAgICAgIGRzdC5zZXQoc2lnbmF0dXJlLnN1YmFycmF5KHBhcmFtQnl0ZXMpLCBvZmZzZXQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZHN0LnNldChzaWduYXR1cmUuc3ViYXJyYXkocGFyYW1CeXRlcyArIHNQYWRkaW5nKSwgb2Zmc2V0KTtcbiAgICB9XG4gICAgcmV0dXJuIGRzdDtcbn1cbmV4cG9ydHMuam9zZVRvRGVyID0gam9zZVRvRGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZWNkc2FTaWdGb3JtYXR0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidTokenError = exports.MissingParametersError = void 0;\nclass MissingParametersError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'MissingParametersError';\n        this.message = message || '';\n    }\n}\nexports.MissingParametersError = MissingParametersError;\nclass InvalidTokenError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'InvalidTokenError';\n        this.message = message || '';\n    }\n}\nexports.InvalidTokenError = InvalidTokenError;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLDhCQUE4QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbXBsYXRlLXJlYWN0LW5leHRqcy10cy8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9lcnJvcnMuanM/ZjhkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZFRva2VuRXJyb3IgPSBleHBvcnRzLk1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IgPSB2b2lkIDA7XG5jbGFzcyBNaXNzaW5nUGFyYW1ldGVyc0Vycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ01pc3NpbmdQYXJhbWV0ZXJzRXJyb3InO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlIHx8ICcnO1xuICAgIH1cbn1cbmV4cG9ydHMuTWlzc2luZ1BhcmFtZXRlcnNFcnJvciA9IE1pc3NpbmdQYXJhbWV0ZXJzRXJyb3I7XG5jbGFzcyBJbnZhbGlkVG9rZW5FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdJbnZhbGlkVG9rZW5FcnJvcic7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2UgfHwgJyc7XG4gICAgfVxufVxuZXhwb3J0cy5JbnZhbGlkVG9rZW5FcnJvciA9IEludmFsaWRUb2tlbkVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/jsontokens/lib/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./signer */ \"(ssr)/./node_modules/jsontokens/lib/signer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./verifier */ \"(ssr)/./node_modules/jsontokens/lib/verifier.js\"), exports);\n__exportStar(__webpack_require__(/*! ./decode */ \"(ssr)/./node_modules/jsontokens/lib/decode.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cryptoClients */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLCtEQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxtRUFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsK0RBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLCtEQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxtRkFBaUI7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW1wbGF0ZS1yZWFjdC1uZXh0anMtdHMvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvaW5kZXguanM/Zjc5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NpZ25lclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmVyaWZpZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlY29kZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jcnlwdG9DbGllbnRzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/signer.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/signer.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenSigner = exports.createUnsecuredToken = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nconst cryptoClients_1 = __webpack_require__(/*! ./cryptoClients */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\");\nconst sha256_1 = __webpack_require__(/*! ./cryptoClients/sha256 */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\");\nfunction createSigningInput(payload, header) {\n    const tokenParts = [];\n    // add in the header\n    const encodedHeader = base64url.encode(JSON.stringify(header));\n    tokenParts.push(encodedHeader);\n    // add in the payload\n    const encodedPayload = base64url.encode(JSON.stringify(payload));\n    tokenParts.push(encodedPayload);\n    // prepare the message\n    const signingInput = tokenParts.join('.');\n    // return the signing input\n    return signingInput;\n}\nfunction createUnsecuredToken(payload) {\n    const header = { typ: 'JWT', alg: 'none' };\n    return createSigningInput(payload, header) + '.';\n}\nexports.createUnsecuredToken = createUnsecuredToken;\nclass TokenSigner {\n    constructor(signingAlgorithm, rawPrivateKey) {\n        if (!(signingAlgorithm && rawPrivateKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and private key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw new Error('signing algorithm parameter must be a string');\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw new Error('invalid signing algorithm');\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPrivateKey = rawPrivateKey;\n    }\n    header(header = {}) {\n        const defaultHeader = { typ: this.tokenType, alg: this.cryptoClient.algorithmName };\n        return Object.assign({}, defaultHeader, header);\n    }\n    sign(payload, expanded = false, customHeader = {}) {\n        // generate the token header\n        const header = this.header(customHeader);\n        // prepare the message to be signed\n        const signingInput = createSigningInput(payload, header);\n        const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n        return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n    }\n    signAsync(payload, expanded = false, customHeader = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // generate the token header\n            const header = this.header(customHeader);\n            // prepare the message to be signed\n            const signingInput = createSigningInput(payload, header);\n            const signingInputHash = yield (0, sha256_1.hashSha256Async)(signingInput);\n            return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n        });\n    }\n    createWithSignedHash(payload, expanded, header, signingInput, signingInputHash) {\n        // sign the message and add in the signature\n        const signature = this.cryptoClient.signHash(signingInputHash, this.rawPrivateKey);\n        if (expanded) {\n            const signedToken = {\n                header: [base64url.encode(JSON.stringify(header))],\n                payload: JSON.stringify(payload),\n                signature: [signature],\n            };\n            return signedToken;\n        }\n        else {\n            return [signingInput, signature].join('.');\n        }\n    }\n}\nexports.TokenSigner = TokenSigner;\n//# sourceMappingURL=signer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvc2lnbmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyw0QkFBNEI7QUFDbEQsa0JBQWtCLG1CQUFPLENBQUMscUVBQWE7QUFDdkMsd0JBQXdCLG1CQUFPLENBQUMsbUZBQWlCO0FBQ2pELGlCQUFpQixtQkFBTyxDQUFDLCtEQUFVO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLDJGQUF3QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsZ0NBQWdDO0FBQ2hDLCtCQUErQjtBQUMvQjtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVtcGxhdGUtcmVhY3QtbmV4dGpzLXRzLy4vbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL3NpZ25lci5qcz84NGNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRva2VuU2lnbmVyID0gZXhwb3J0cy5jcmVhdGVVbnNlY3VyZWRUb2tlbiA9IHZvaWQgMDtcbmNvbnN0IGJhc2U2NHVybCA9IHJlcXVpcmUoXCIuL2Jhc2U2NFVybFwiKTtcbmNvbnN0IGNyeXB0b0NsaWVudHNfMSA9IHJlcXVpcmUoXCIuL2NyeXB0b0NsaWVudHNcIik7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIi4vY3J5cHRvQ2xpZW50cy9zaGEyNTZcIik7XG5mdW5jdGlvbiBjcmVhdGVTaWduaW5nSW5wdXQocGF5bG9hZCwgaGVhZGVyKSB7XG4gICAgY29uc3QgdG9rZW5QYXJ0cyA9IFtdO1xuICAgIC8vIGFkZCBpbiB0aGUgaGVhZGVyXG4gICAgY29uc3QgZW5jb2RlZEhlYWRlciA9IGJhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoaGVhZGVyKSk7XG4gICAgdG9rZW5QYXJ0cy5wdXNoKGVuY29kZWRIZWFkZXIpO1xuICAgIC8vIGFkZCBpbiB0aGUgcGF5bG9hZFxuICAgIGNvbnN0IGVuY29kZWRQYXlsb2FkID0gYmFzZTY0dXJsLmVuY29kZShKU09OLnN0cmluZ2lmeShwYXlsb2FkKSk7XG4gICAgdG9rZW5QYXJ0cy5wdXNoKGVuY29kZWRQYXlsb2FkKTtcbiAgICAvLyBwcmVwYXJlIHRoZSBtZXNzYWdlXG4gICAgY29uc3Qgc2lnbmluZ0lucHV0ID0gdG9rZW5QYXJ0cy5qb2luKCcuJyk7XG4gICAgLy8gcmV0dXJuIHRoZSBzaWduaW5nIGlucHV0XG4gICAgcmV0dXJuIHNpZ25pbmdJbnB1dDtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVVuc2VjdXJlZFRva2VuKHBheWxvYWQpIHtcbiAgICBjb25zdCBoZWFkZXIgPSB7IHR5cDogJ0pXVCcsIGFsZzogJ25vbmUnIH07XG4gICAgcmV0dXJuIGNyZWF0ZVNpZ25pbmdJbnB1dChwYXlsb2FkLCBoZWFkZXIpICsgJy4nO1xufVxuZXhwb3J0cy5jcmVhdGVVbnNlY3VyZWRUb2tlbiA9IGNyZWF0ZVVuc2VjdXJlZFRva2VuO1xuY2xhc3MgVG9rZW5TaWduZXIge1xuICAgIGNvbnN0cnVjdG9yKHNpZ25pbmdBbGdvcml0aG0sIHJhd1ByaXZhdGVLZXkpIHtcbiAgICAgICAgaWYgKCEoc2lnbmluZ0FsZ29yaXRobSAmJiByYXdQcml2YXRlS2V5KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLk1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IoJ2Egc2lnbmluZyBhbGdvcml0aG0gYW5kIHByaXZhdGUga2V5IGFyZSByZXF1aXJlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2Ygc2lnbmluZ0FsZ29yaXRobSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignc2lnbmluZyBhbGdvcml0aG0gcGFyYW1ldGVyIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgICAgICAgfVxuICAgICAgICBzaWduaW5nQWxnb3JpdGhtID0gc2lnbmluZ0FsZ29yaXRobS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICBpZiAoIWNyeXB0b0NsaWVudHNfMS5jcnlwdG9DbGllbnRzLmhhc093blByb3BlcnR5KHNpZ25pbmdBbGdvcml0aG0pKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgc2lnbmluZyBhbGdvcml0aG0nKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRva2VuVHlwZSA9ICdKV1QnO1xuICAgICAgICB0aGlzLmNyeXB0b0NsaWVudCA9IGNyeXB0b0NsaWVudHNfMS5jcnlwdG9DbGllbnRzW3NpZ25pbmdBbGdvcml0aG1dO1xuICAgICAgICB0aGlzLnJhd1ByaXZhdGVLZXkgPSByYXdQcml2YXRlS2V5O1xuICAgIH1cbiAgICBoZWFkZXIoaGVhZGVyID0ge30pIHtcbiAgICAgICAgY29uc3QgZGVmYXVsdEhlYWRlciA9IHsgdHlwOiB0aGlzLnRva2VuVHlwZSwgYWxnOiB0aGlzLmNyeXB0b0NsaWVudC5hbGdvcml0aG1OYW1lIH07XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0SGVhZGVyLCBoZWFkZXIpO1xuICAgIH1cbiAgICBzaWduKHBheWxvYWQsIGV4cGFuZGVkID0gZmFsc2UsIGN1c3RvbUhlYWRlciA9IHt9KSB7XG4gICAgICAgIC8vIGdlbmVyYXRlIHRoZSB0b2tlbiBoZWFkZXJcbiAgICAgICAgY29uc3QgaGVhZGVyID0gdGhpcy5oZWFkZXIoY3VzdG9tSGVhZGVyKTtcbiAgICAgICAgLy8gcHJlcGFyZSB0aGUgbWVzc2FnZSB0byBiZSBzaWduZWRcbiAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0ID0gY3JlYXRlU2lnbmluZ0lucHV0KHBheWxvYWQsIGhlYWRlcik7XG4gICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dEhhc2ggPSAoMCwgc2hhMjU2XzEuaGFzaFNoYTI1Nikoc2lnbmluZ0lucHV0KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlV2l0aFNpZ25lZEhhc2gocGF5bG9hZCwgZXhwYW5kZWQsIGhlYWRlciwgc2lnbmluZ0lucHV0LCBzaWduaW5nSW5wdXRIYXNoKTtcbiAgICB9XG4gICAgc2lnbkFzeW5jKHBheWxvYWQsIGV4cGFuZGVkID0gZmFsc2UsIGN1c3RvbUhlYWRlciA9IHt9KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICAvLyBnZW5lcmF0ZSB0aGUgdG9rZW4gaGVhZGVyXG4gICAgICAgICAgICBjb25zdCBoZWFkZXIgPSB0aGlzLmhlYWRlcihjdXN0b21IZWFkZXIpO1xuICAgICAgICAgICAgLy8gcHJlcGFyZSB0aGUgbWVzc2FnZSB0byBiZSBzaWduZWRcbiAgICAgICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dCA9IGNyZWF0ZVNpZ25pbmdJbnB1dChwYXlsb2FkLCBoZWFkZXIpO1xuICAgICAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0SGFzaCA9IHlpZWxkICgwLCBzaGEyNTZfMS5oYXNoU2hhMjU2QXN5bmMpKHNpZ25pbmdJbnB1dCk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVXaXRoU2lnbmVkSGFzaChwYXlsb2FkLCBleHBhbmRlZCwgaGVhZGVyLCBzaWduaW5nSW5wdXQsIHNpZ25pbmdJbnB1dEhhc2gpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgY3JlYXRlV2l0aFNpZ25lZEhhc2gocGF5bG9hZCwgZXhwYW5kZWQsIGhlYWRlciwgc2lnbmluZ0lucHV0LCBzaWduaW5nSW5wdXRIYXNoKSB7XG4gICAgICAgIC8vIHNpZ24gdGhlIG1lc3NhZ2UgYW5kIGFkZCBpbiB0aGUgc2lnbmF0dXJlXG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IHRoaXMuY3J5cHRvQ2xpZW50LnNpZ25IYXNoKHNpZ25pbmdJbnB1dEhhc2gsIHRoaXMucmF3UHJpdmF0ZUtleSk7XG4gICAgICAgIGlmIChleHBhbmRlZCkge1xuICAgICAgICAgICAgY29uc3Qgc2lnbmVkVG9rZW4gPSB7XG4gICAgICAgICAgICAgICAgaGVhZGVyOiBbYmFzZTY0dXJsLmVuY29kZShKU09OLnN0cmluZ2lmeShoZWFkZXIpKV0sXG4gICAgICAgICAgICAgICAgcGF5bG9hZDogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCksXG4gICAgICAgICAgICAgICAgc2lnbmF0dXJlOiBbc2lnbmF0dXJlXSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gc2lnbmVkVG9rZW47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gW3NpZ25pbmdJbnB1dCwgc2lnbmF0dXJlXS5qb2luKCcuJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlRva2VuU2lnbmVyID0gVG9rZW5TaWduZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/verifier.js":
/*!*************************************************!*\
  !*** ./node_modules/jsontokens/lib/verifier.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenVerifier = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nconst cryptoClients_1 = __webpack_require__(/*! ./cryptoClients */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\");\nconst sha256_1 = __webpack_require__(/*! ./cryptoClients/sha256 */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\");\nclass TokenVerifier {\n    constructor(signingAlgorithm, rawPublicKey) {\n        if (!(signingAlgorithm && rawPublicKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and public key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw 'signing algorithm parameter must be a string';\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw 'invalid signing algorithm';\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPublicKey = rawPublicKey;\n    }\n    verify(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, false);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, false);\n        }\n        else {\n            return false;\n        }\n    }\n    verifyAsync(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, true);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, true);\n        }\n        else {\n            return Promise.resolve(false);\n        }\n    }\n    verifyCompact(token, async) {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        // calculate the signing input hash\n        const signingInput = tokenParts[0] + '.' + tokenParts[1];\n        const performVerify = (signingInputHash) => {\n            // extract the signature as a DER array\n            const derSignatureBytes = this.cryptoClient.loadSignature(tokenParts[2]);\n            // verify the signed hash\n            return this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n    verifyExpanded(token, async) {\n        const signingInput = [token['header'].join('.'), base64url.encode(token['payload'])].join('.');\n        let verified = true;\n        const performVerify = (signingInputHash) => {\n            token['signature'].map((signature) => {\n                const derSignatureBytes = this.cryptoClient.loadSignature(signature);\n                const signatureVerified = this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n                if (!signatureVerified) {\n                    verified = false;\n                }\n            });\n            return verified;\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n}\nexports.TokenVerifier = TokenVerifier;\n//# sourceMappingURL=verifier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvdmVyaWZpZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGtCQUFrQixtQkFBTyxDQUFDLHFFQUFhO0FBQ3ZDLHdCQUF3QixtQkFBTyxDQUFDLG1GQUFpQjtBQUNqRCxpQkFBaUIsbUJBQU8sQ0FBQywrREFBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQywyRkFBd0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbXBsYXRlLXJlYWN0LW5leHRqcy10cy8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi92ZXJpZmllci5qcz9kOWEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ub2tlblZlcmlmaWVyID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZShcIi4vYmFzZTY0VXJsXCIpO1xuY29uc3QgY3J5cHRvQ2xpZW50c18xID0gcmVxdWlyZShcIi4vY3J5cHRvQ2xpZW50c1wiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiLi9jcnlwdG9DbGllbnRzL3NoYTI1NlwiKTtcbmNsYXNzIFRva2VuVmVyaWZpZXIge1xuICAgIGNvbnN0cnVjdG9yKHNpZ25pbmdBbGdvcml0aG0sIHJhd1B1YmxpY0tleSkge1xuICAgICAgICBpZiAoIShzaWduaW5nQWxnb3JpdGhtICYmIHJhd1B1YmxpY0tleSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5NaXNzaW5nUGFyYW1ldGVyc0Vycm9yKCdhIHNpZ25pbmcgYWxnb3JpdGhtIGFuZCBwdWJsaWMga2V5IGFyZSByZXF1aXJlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2Ygc2lnbmluZ0FsZ29yaXRobSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93ICdzaWduaW5nIGFsZ29yaXRobSBwYXJhbWV0ZXIgbXVzdCBiZSBhIHN0cmluZyc7XG4gICAgICAgIH1cbiAgICAgICAgc2lnbmluZ0FsZ29yaXRobSA9IHNpZ25pbmdBbGdvcml0aG0udG9VcHBlckNhc2UoKTtcbiAgICAgICAgaWYgKCFjcnlwdG9DbGllbnRzXzEuY3J5cHRvQ2xpZW50cy5oYXNPd25Qcm9wZXJ0eShzaWduaW5nQWxnb3JpdGhtKSkge1xuICAgICAgICAgICAgdGhyb3cgJ2ludmFsaWQgc2lnbmluZyBhbGdvcml0aG0nO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudG9rZW5UeXBlID0gJ0pXVCc7XG4gICAgICAgIHRoaXMuY3J5cHRvQ2xpZW50ID0gY3J5cHRvQ2xpZW50c18xLmNyeXB0b0NsaWVudHNbc2lnbmluZ0FsZ29yaXRobV07XG4gICAgICAgIHRoaXMucmF3UHVibGljS2V5ID0gcmF3UHVibGljS2V5O1xuICAgIH1cbiAgICB2ZXJpZnkodG9rZW4pIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZlcmlmeUNvbXBhY3QodG9rZW4sIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgdG9rZW4gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJpZnlFeHBhbmRlZCh0b2tlbiwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmlmeUFzeW5jKHRva2VuKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJpZnlDb21wYWN0KHRva2VuLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgdG9rZW4gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJpZnlFeHBhbmRlZCh0b2tlbiwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2ZXJpZnlDb21wYWN0KHRva2VuLCBhc3luYykge1xuICAgICAgICAvLyBkZWNvbXBvc2UgdGhlIHRva2VuIGludG8gcGFydHNcbiAgICAgICAgY29uc3QgdG9rZW5QYXJ0cyA9IHRva2VuLnNwbGl0KCcuJyk7XG4gICAgICAgIC8vIGNhbGN1bGF0ZSB0aGUgc2lnbmluZyBpbnB1dCBoYXNoXG4gICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dCA9IHRva2VuUGFydHNbMF0gKyAnLicgKyB0b2tlblBhcnRzWzFdO1xuICAgICAgICBjb25zdCBwZXJmb3JtVmVyaWZ5ID0gKHNpZ25pbmdJbnB1dEhhc2gpID0+IHtcbiAgICAgICAgICAgIC8vIGV4dHJhY3QgdGhlIHNpZ25hdHVyZSBhcyBhIERFUiBhcnJheVxuICAgICAgICAgICAgY29uc3QgZGVyU2lnbmF0dXJlQnl0ZXMgPSB0aGlzLmNyeXB0b0NsaWVudC5sb2FkU2lnbmF0dXJlKHRva2VuUGFydHNbMl0pO1xuICAgICAgICAgICAgLy8gdmVyaWZ5IHRoZSBzaWduZWQgaGFzaFxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3J5cHRvQ2xpZW50LnZlcmlmeUhhc2goc2lnbmluZ0lucHV0SGFzaCwgZGVyU2lnbmF0dXJlQnl0ZXMsIHRoaXMucmF3UHVibGljS2V5KTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGFzeW5jKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHNoYTI1Nl8xLmhhc2hTaGEyNTZBc3luYykoc2lnbmluZ0lucHV0KS50aGVuKHNpZ25pbmdJbnB1dEhhc2ggPT4gcGVyZm9ybVZlcmlmeShzaWduaW5nSW5wdXRIYXNoKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBzaWduaW5nSW5wdXRIYXNoID0gKDAsIHNoYTI1Nl8xLmhhc2hTaGEyNTYpKHNpZ25pbmdJbnB1dCk7XG4gICAgICAgICAgICByZXR1cm4gcGVyZm9ybVZlcmlmeShzaWduaW5nSW5wdXRIYXNoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2ZXJpZnlFeHBhbmRlZCh0b2tlbiwgYXN5bmMpIHtcbiAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0ID0gW3Rva2VuWydoZWFkZXInXS5qb2luKCcuJyksIGJhc2U2NHVybC5lbmNvZGUodG9rZW5bJ3BheWxvYWQnXSldLmpvaW4oJy4nKTtcbiAgICAgICAgbGV0IHZlcmlmaWVkID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgcGVyZm9ybVZlcmlmeSA9IChzaWduaW5nSW5wdXRIYXNoKSA9PiB7XG4gICAgICAgICAgICB0b2tlblsnc2lnbmF0dXJlJ10ubWFwKChzaWduYXR1cmUpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBkZXJTaWduYXR1cmVCeXRlcyA9IHRoaXMuY3J5cHRvQ2xpZW50LmxvYWRTaWduYXR1cmUoc2lnbmF0dXJlKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzaWduYXR1cmVWZXJpZmllZCA9IHRoaXMuY3J5cHRvQ2xpZW50LnZlcmlmeUhhc2goc2lnbmluZ0lucHV0SGFzaCwgZGVyU2lnbmF0dXJlQnl0ZXMsIHRoaXMucmF3UHVibGljS2V5KTtcbiAgICAgICAgICAgICAgICBpZiAoIXNpZ25hdHVyZVZlcmlmaWVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZlcmlmaWVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdmVyaWZpZWQ7XG4gICAgICAgIH07XG4gICAgICAgIGlmIChhc3luYykge1xuICAgICAgICAgICAgcmV0dXJuICgwLCBzaGEyNTZfMS5oYXNoU2hhMjU2QXN5bmMpKHNpZ25pbmdJbnB1dCkudGhlbihzaWduaW5nSW5wdXRIYXNoID0+IHBlcmZvcm1WZXJpZnkoc2lnbmluZ0lucHV0SGFzaCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0SGFzaCA9ICgwLCBzaGEyNTZfMS5oYXNoU2hhMjU2KShzaWduaW5nSW5wdXQpO1xuICAgICAgICAgICAgcmV0dXJuIHBlcmZvcm1WZXJpZnkoc2lnbmluZ0lucHV0SGFzaCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlRva2VuVmVyaWZpZXIgPSBUb2tlblZlcmlmaWVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyaWZpZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/verifier.js\n");

/***/ })

};
;